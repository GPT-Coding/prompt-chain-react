Act: You are a senior front-end developer

Tasks:
  - Create an OrderConfirmationModal component to display the order confirmation form (AC1, AC2, AC5).
    Use Antd Modal and Form components.
    Receive the selected product details, visible state, and onHideModal function as props.
    Display the product details within the modal.
    Include shipping address and quantity fields (AC1, AC4).
  - Validate the form fields and display inline error messages (AC3, AC4).
  - Handle form submission by calling the useOrderConfirmation hook functions (AC2, AC3, AC6).
  - Show a toast message upon successful submission and call onHideModal to close the modal (AC2).
  - Call onHideModal to close the modal without submitting when the user clicks cancel (AC5).

TestStrategy:
  - Process 1: If ViewComponent relies on ViewModel for rendering, stub the data in the ViewModel layer and test the rendered content.
  - Process 2: If ViewComponent calls a method of a component in the ViewModel layer in response to user events, spyOn that method and test the behavior of the call.

UserStory:
  Description: 作为一个用户，我可以再商品列表页面（已经实现）选择一个商品进行下单，以便于我购买商品
  ACs:
    - AC1:
        - Given 用户进入商品列表页面
        - When 点击某个商品
        - Then 可以弹出一个订单确认的弹框，其中包含了这个商品的详情，以及一个可以填写的表单，包括了寄送地址、商品数量两个字段
    - AC2:
        - Given 用户打开订单确认的弹窗
        - When 填写了合法的寄送地址、商品数量，点击提交。
        - Then 提交订单，弹出 toast 提示用户订单提交成功，然后关闭弹窗
    - AC3:
        - Given 用户打开订单确认的弹窗
        - When 没有填写即送地址或商品树龄，点击了提交
        - Then 表单校验不通过，在没有填写的地方报错“请填写该字段”
    - AC4:
        - Given 用户打开订单确认的弹窗
        - When 填写商品数量字段
        - Then 只能填写大于等于的整数。
    - AC5:
        - Given 用户打开订单确认的弹窗
        - When 用户点击取消
        - Then 关闭弹窗，不做其他操作。
    - AC6:
        - Given 用户确认下单
        - When 服务器出错
        - Then 弹出 toast 提示用户提交失败，然后关闭弹窗

  依赖 API:
    URL: POST /portal/api/orders
    request body: |
      {
        merchandieseId: string,
        quantity: number,
        shipAddress: string
      }
    response: |
      {
        status: number,
        data: {
          orderId: string
        }
        errormsg: string
      }
  涉及模型:
    Order:
      {
        id?: string,
        merchandieseId: string,
        quantity: number,
        shipAddress: string,
      }

    Merchandise:
      {
        id: string,
        title: string,
        description: string,
        price: number,
        stock: number,
        img: string;,
      }

Example:
  - MerchandiseList.tsx:
    Describe: to render merchandise list in page
    Tests:
      - Process 1: "Stub ViewModel Hook return 3 items `[{title: '可口可乐', description:'最好喝的可乐',price:10, stock: 3, img:'https://s3-prd-hkp-ecommerce-01.s3.ap-southeast-1.amazonaws.com/ecom-prod/uploads/20210830113949/A1156_Coke_Pet_500_24P-100x100.jpg'},{title: '七喜', description:'最好喝的可乐',price:15, stock: 3, img:'https://s3-prd-hkp-ecommerce-01.s3.ap-southeast-1.amazonaws.com/ecom-prod/uploads/20210830113949/A1156_Coke_Pet_500_24P-100x100.jpg'},{title: '芬达', description:'最好喝的可乐',price:20, stock: 3, img:'https://s3-prd-hkp-ecommerce-01.s3.ap-southeast-1.amazonaws.com/ecom-prod/uploads/20210830113949/A1156_Coke_Pet_500_24P-100x100.jpg'}]`, then render a list has 3 items. Each item should render a `title`, `description`, label 价格with price, label 库存 with `stock`, and render Image with src is `img`"
      - Process 1: "Stub ViewModel Hook return 0 items `[]`, then should render a empty placeholder in list: '没有更多商品'"

Instruction: |
  'Provide test cases for each component need to be implemented in "Tasks" to fulfilment "UserStory" according following the guidance mention in "Process" above. Don't think about tech detail, Use the following format:
  Thought: you should always think about what is still uncertain about the "Process", "UserStory" and "Tasks".
  Question: the question to ask to clarify the "Process" for the "Tasks" and "UserStory" to generate component test case.
  Answer: the answer I responded to the question
  …(this Thought/Question/Answer repeat at least 3 times, at most 10 times)
  Thought: I know enough to provide test case.
  TestExamples: Describe test case of each components need to implemented like Example, please fill example data into test case.
